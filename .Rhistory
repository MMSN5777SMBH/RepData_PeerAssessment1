data <- read.csv("activity.csv")
steps_by_day <- aggregate(steps ~ date, data, sum)
View(steps_by_day)
View(steps_by_day)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
hist(steps_by_day$steps, main = paste("Total Steps Each Day"))
hist(steps_by_day$steps)
rmean <- mean(steps_by_day$steps)
Step_mn <- mean(steps_by_day$steps)
Step_md <- median(steps_by_day$steps)
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval,steps_by_interval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
steps_by_interval <- aggregate(steps ~ interval, data, mean)
steps_by_interval
24*60
2355/5
2355/53
44*5
2355*5
11775/60
196/24
288/5
288/24
24*12
max_interval <- steps_by_interval[which.max(steps_by_interval$steps),1]
max_interval
incomplete <- sum(!complete.cases(data))
imputed_data <- transform(data, steps = ifelse(is.na(data$steps), steps_by_interval$steps[match(data$interval, steps_by_interval$interval)], data$steps))
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
StepMOD_mn <- mean(steps_by_day_i$steps)
StepMOD_md <- median(steps_by_day_i$steps)
Step_mn
Step_md
StepMOD_md
StepMOD_mn
mean_diff <- rmean.i - rmean
med_diff <- rmedian.i - rmedian
total_diff <- sum(steps_by_day_i$steps) - sum(steps_by_day$steps)
total_diff
mean_diff <- Step_md -StepMOD_md
mean_diff
mean_diff <- Step_mn -StepMOD_mn
mean_diff
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
imputed_data$dow = as.factor(ifelse(is.element(weekdays(as.Date(imputed_data$date)),weekdays), "Weekday", "Weekend"))
steps_by_interval_i <- aggregate(steps ~ interval + dow, imputed_data, mean)
library(lattice)
xyplot(steps_by_interval_i$steps ~ steps_by_interval_i$interval|steps_by_interval_i$dow, main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
500/12
41.667/5
xyplot(steps_by_interval_i$steps ~ steps_by_interval_i$interval|steps_by_interval_i$dow, main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
Step_md
Step_mn
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval,steps_by_interval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
max_interval <- steps_by_interval[which.max(steps_by_interval$steps),1]
max_interval
incomplete <- sum(!complete.cases(data))
imputed_data <- transform(data, steps = ifelse(is.na(data$steps), steps_by_interval$steps[match(data$interval, steps_by_interval$interval)], data$steps))
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
NA_Steps <- ifelse(is.na(data$steps)
end
NA_Steps <- is.na(data$steps)
NA_Steps
size(NA_Steps)
dim(NA_Steps)
length(NA_Steps)
Step_md
Step_mn
StepMOD_md
StepMOD_mn
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
imputed_data$dow = as.factor(ifelse(is.element(weekdays(as.Date(imputed_data$date)),weekdays), "Weekday", "Weekend"))
steps_by_interval_i <- aggregate(steps ~ interval + dow, imputed_data, mean)
library(lattice)
xyplot(steps_by_interval_i$steps ~ steps_by_interval_i$interval|steps_by_interval_i$dow, main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
steps_by_day_i <- aggregate(steps ~ date, imputed_data, sum)
hist(steps_by_day_i$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval,steps_by_interval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
max_interval <- steps_by_interval[which.max(steps_by_interval$steps),1]
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
knit2html()
knit2html(input = "PA1_template.md", output = "PA1_template.html")
quit()
